"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/FaceVerification.tsx":
/*!*********************************************!*\
  !*** ./app/components/FaceVerification.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FaceVerification)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var face_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! face-api.js */ \"(app-pages-browser)/./node_modules/face-api.js/build/es6/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction FaceVerification() {\n    _s();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [livenessScore, setLivenessScore] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [message, setMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('Starting face verification...');\n    const lastPositionsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const blinkCountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const lastEARRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const [debugInfo, setDebugInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        ear: 0,\n        state: 'open',\n        threshold: 0\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FaceVerification.useEffect\": ()=>{\n            const loadModels = {\n                \"FaceVerification.useEffect.loadModels\": async ()=>{\n                    try {\n                        setMessage('Loading face detection models...');\n                        await Promise.all([\n                            face_api_js__WEBPACK_IMPORTED_MODULE_2__.nets.tinyFaceDetector.loadFromUri('/models'),\n                            face_api_js__WEBPACK_IMPORTED_MODULE_2__.nets.faceLandmark68Net.loadFromUri('/models'),\n                            face_api_js__WEBPACK_IMPORTED_MODULE_2__.nets.faceExpressionNet.loadFromUri('/models')\n                        ]);\n                        setMessage('Models loaded successfully. Starting camera...');\n                        setIsLoading(false);\n                        startVideo();\n                    } catch (error) {\n                        console.error('Error loading models:', error);\n                        setMessage('Error loading face detection models. Please refresh the page.');\n                    }\n                }\n            }[\"FaceVerification.useEffect.loadModels\"];\n            loadModels();\n            return ({\n                \"FaceVerification.useEffect\": ()=>{\n                    var _videoRef_current;\n                    if ((_videoRef_current = videoRef.current) === null || _videoRef_current === void 0 ? void 0 : _videoRef_current.srcObject) {\n                        const tracks = videoRef.current.srcObject.getTracks();\n                        tracks.forEach({\n                            \"FaceVerification.useEffect\": (track)=>track.stop()\n                        }[\"FaceVerification.useEffect\"]);\n                    }\n                }\n            })[\"FaceVerification.useEffect\"];\n        }\n    }[\"FaceVerification.useEffect\"], []);\n    const getEyeAspectRatio = (eye)=>{\n        try {\n            // Vertical eye landmarks\n            const v1 = euclideanDistance(eye[1], eye[5]);\n            const v2 = euclideanDistance(eye[2], eye[4]);\n            // Horizontal eye landmark\n            const h = euclideanDistance(eye[0], eye[3]);\n            // Compute the eye aspect ratio\n            return h > 0 ? (v1 + v2) / (2.0 * h) : 0;\n        } catch (error) {\n            console.error('Error calculating EAR:', error);\n            return 0;\n        }\n    };\n    const euclideanDistance = (pt1, pt2)=>{\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    const detectBlink = (landmarks)=>{\n        if (!landmarks) return 0;\n        try {\n            // Get eye landmarks\n            const leftEye = landmarks.getLeftEye();\n            const rightEye = landmarks.getRightEye();\n            // Calculate eye aspect ratio\n            const leftEAR = getEyeAspectRatio(leftEye);\n            const rightEAR = getEyeAspectRatio(rightEye);\n            // Average eye aspect ratio\n            const ear = (leftEAR + rightEAR) / 2.0;\n            // Keep track of last 10 EAR values\n            lastEARRef.current.push(ear);\n            if (lastEARRef.current.length > 10) {\n                lastEARRef.current.shift();\n            }\n            // Calculate baseline EAR (average of highest values)\n            const sortedEARs = [\n                ...lastEARRef.current\n            ].sort((a, b)=>b - a);\n            const baselineEAR = sortedEARs.slice(0, 3).reduce((a, b)=>a + b, 0) / 3;\n            // Dynamic threshold based on baseline\n            const threshold = baselineEAR * 0.65; // More sensitive threshold\n            // Detect rapid decrease and increase in EAR (blink pattern)\n            if (lastEARRef.current.length >= 3) {\n                const prev = lastEARRef.current[lastEARRef.current.length - 2];\n                const current = ear;\n                // Update debug info with more details\n                setDebugInfo({\n                    ear: current,\n                    state: current < threshold ? 'closed' : 'open',\n                    threshold: threshold\n                });\n                // Detect significant eye closure\n                if (prev > threshold && current < threshold) {\n                    blinkCountRef.current += 1;\n                    console.log('Blink detected:', {\n                        ear: current,\n                        threshold: threshold,\n                        baseline: baselineEAR\n                    });\n                }\n            }\n            return blinkCountRef.current;\n        } catch (error) {\n            console.error('Error in blink detection:', error);\n            return blinkCountRef.current;\n        }\n    };\n    const detectMovement = (landmarks)=>{\n        if (!landmarks) return 0;\n        const nose = landmarks.getNose()[0];\n        const currentPosition = {\n            x: nose.x,\n            y: nose.y\n        };\n        // Keep last 10 positions\n        lastPositionsRef.current.push(currentPosition);\n        if (lastPositionsRef.current.length > 10) {\n            lastPositionsRef.current.shift();\n        }\n        // Calculate movement variance\n        if (lastPositionsRef.current.length < 2) return 0;\n        let totalMovement = 0;\n        for(let i = 1; i < lastPositionsRef.current.length; i++){\n            const prev = lastPositionsRef.current[i - 1];\n            const curr = lastPositionsRef.current[i];\n            totalMovement += Math.abs(curr.x - prev.x) + Math.abs(curr.y - prev.y);\n        }\n        return totalMovement / lastPositionsRef.current.length;\n    };\n    const startVideo = async ()=>{\n        try {\n            const constraints = {\n                video: {\n                    width: {\n                        ideal: 640\n                    },\n                    height: {\n                        ideal: 480\n                    },\n                    facingMode: 'user',\n                    frameRate: {\n                        ideal: 30\n                    }\n                }\n            };\n            const stream = await navigator.mediaDevices.getUserMedia(constraints);\n            if (videoRef.current) {\n                videoRef.current.srcObject = stream;\n                setMessage('Camera started. Positioning your face in the center of the frame...');\n            }\n        } catch (error) {\n            console.error('Error accessing camera:', error);\n            setMessage('Error accessing camera. Please ensure camera permissions are granted and no other app is using it.');\n        }\n    };\n    const drawEyes = (ctx, leftEye, rightEye, isEyeClosed)=>{\n        ctx.strokeStyle = 'yellow';\n        ctx.lineWidth = 2;\n        if (isEyeClosed) {\n            // Draw closed eyes (just horizontal lines)\n            [\n                leftEye,\n                rightEye\n            ].forEach((eye)=>{\n                const topY = (eye[1].y + eye[2].y) / 2;\n                ctx.beginPath();\n                ctx.moveTo(eye[0].x, topY);\n                ctx.lineTo(eye[3].x, topY);\n                ctx.stroke();\n            });\n        } else {\n            // Draw open eyes (full shape)\n            [\n                leftEye,\n                rightEye\n            ].forEach((eye)=>{\n                ctx.beginPath();\n                ctx.moveTo(eye[0].x, eye[0].y);\n                eye.forEach((pt)=>ctx.lineTo(pt.x, pt.y));\n                ctx.closePath();\n                ctx.stroke();\n            });\n        }\n    };\n    const handleVideoPlay = ()=>{\n        if (videoRef.current && canvasRef.current) {\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            const intervalId = setInterval(async ()=>{\n                if (video && canvas) {\n                    try {\n                        const options = new face_api_js__WEBPACK_IMPORTED_MODULE_2__.TinyFaceDetectorOptions({\n                            inputSize: 320,\n                            scoreThreshold: 0.3\n                        });\n                        const detections = await face_api_js__WEBPACK_IMPORTED_MODULE_2__.detectAllFaces(video, options).withFaceLandmarks().withFaceExpressions();\n                        const displaySize = {\n                            width: video.videoWidth,\n                            height: video.videoHeight\n                        };\n                        face_api_js__WEBPACK_IMPORTED_MODULE_2__.matchDimensions(canvas, displaySize);\n                        const resizedDetections = face_api_js__WEBPACK_IMPORTED_MODULE_2__.resizeResults(detections, displaySize);\n                        const ctx = canvas.getContext('2d');\n                        if (ctx) {\n                            ctx.clearRect(0, 0, canvas.width, canvas.height);\n                            // Draw guide box\n                            const boxSize = {\n                                width: canvas.width * 0.5,\n                                height: canvas.height * 0.6\n                            };\n                            const boxX = (canvas.width - boxSize.width) / 2;\n                            const boxY = (canvas.height - boxSize.height) / 2;\n                            ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';\n                            ctx.lineWidth = 2;\n                            ctx.setLineDash([\n                                5,\n                                5\n                            ]);\n                            ctx.strokeRect(boxX, boxY, boxSize.width, boxSize.height);\n                            ctx.setLineDash([]);\n                            if (resizedDetections.length > 0) {\n                                // Draw face detections\n                                face_api_js__WEBPACK_IMPORTED_MODULE_2__.draw.drawDetections(canvas, resizedDetections);\n                                // Get landmarks and calculate EAR\n                                const faceLandmarks = resizedDetections[0].landmarks;\n                                const leftEye = faceLandmarks.getLeftEye();\n                                const rightEye = faceLandmarks.getRightEye();\n                                // Calculate current EAR\n                                const leftEAR = getEyeAspectRatio(leftEye);\n                                const rightEAR = getEyeAspectRatio(rightEye);\n                                const currentEAR = (leftEAR + rightEAR) / 2.0;\n                                // Update last EAR values\n                                lastEARRef.current.push(currentEAR);\n                                if (lastEARRef.current.length > 10) {\n                                    lastEARRef.current.shift();\n                                }\n                                // Calculate baseline EAR\n                                const sortedEARs = [\n                                    ...lastEARRef.current\n                                ].sort((a, b)=>b - a);\n                                const baselineEAR = sortedEARs.slice(0, 3).reduce((a, b)=>a + b, 0) / 3;\n                                const threshold = baselineEAR * 0.65;\n                                // Determine if eyes are closed\n                                const isEyeClosed = currentEAR < threshold;\n                                // Draw eyes based on state\n                                drawEyes(ctx, leftEye, rightEye, isEyeClosed);\n                                // Enhanced debug info\n                                ctx.font = '16px Arial';\n                                ctx.fillStyle = 'white';\n                                ctx.fillText(\"Face Detected: Yes\", 10, 20);\n                                ctx.fillText(\"EAR: \".concat(currentEAR.toFixed(3)), 10, 40);\n                                ctx.fillText(\"Threshold: \".concat(threshold.toFixed(3)), 10, 60);\n                                ctx.fillText(\"Eye State: \".concat(isEyeClosed ? 'closed' : 'open'), 10, 80);\n                                ctx.fillText(\"Blinks: \".concat(blinkCountRef.current), 10, 100);\n                                // Process face for liveness\n                                const expressions = resizedDetections[0].expressions;\n                                const blinkCount = detectBlink(faceLandmarks);\n                                const movement = detectMovement(faceLandmarks);\n                                const expressionChange = Math.max(expressions.happy, expressions.surprised, expressions.neutral);\n                                const livenessScore = Math.min(blinkCount * 0.3 + movement * 2 + expressionChange * 0.3, 1);\n                                setLivenessScore(livenessScore);\n                                if (livenessScore > 0.7) {\n                                    if (blinkCount < 2) {\n                                        setMessage(\"Please blink naturally (\".concat(blinkCount, \"/2 blinks)\"));\n                                    } else if (movement < 0.1) {\n                                        setMessage('Please move your head slightly');\n                                    } else {\n                                        setMessage('Live face verified! Natural movements detected.');\n                                    }\n                                } else {\n                                    setMessage('Position your face in the box and blink naturally');\n                                }\n                            } else {\n                                ctx.font = '16px Arial';\n                                ctx.fillStyle = 'white';\n                                ctx.fillText('No face detected', 10, 20);\n                                ctx.fillText('Please position your face in the box', 10, 40);\n                                setMessage('No face detected. Please position your face in the center box.');\n                            }\n                        }\n                    } catch (error) {\n                        console.error('Error in face detection:', error);\n                        setMessage('Face detection error. Please ensure good lighting and face the camera.');\n                    }\n                }\n            }, 100);\n            return ()=>clearInterval(intervalId);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full max-w-md mx-auto p-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                        ref: videoRef,\n                        autoPlay: true,\n                        playsInline: true,\n                        muted: true,\n                        onPlay: handleVideoPlay,\n                        className: \"w-full rounded-lg shadow-lg\",\n                        style: {\n                            transform: 'scaleX(-1)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                        lineNumber: 327,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                        ref: canvasRef,\n                        className: \"absolute top-0 left-0 w-full h-full\",\n                        style: {\n                            transform: 'scaleX(-1)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                        lineNumber: 336,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                lineNumber: 326,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 p-4 bg-white rounded-lg shadow\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-lg font-semibold text-gray-800\",\n                        children: message\n                    }, void 0, false, {\n                        fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                        lineNumber: 344,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-sm text-gray-600\",\n                                children: [\n                                    \"Liveness Score: \",\n                                    (livenessScore * 100).toFixed(1),\n                                    \"%\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                                lineNumber: 346,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full bg-gray-200 rounded-full h-2.5\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-blue-600 h-2.5 rounded-full\",\n                                    style: {\n                                        width: \"\".concat(livenessScore * 100, \"%\")\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                                    lineNumber: 348,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                                lineNumber: 347,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                        lineNumber: 345,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                lineNumber: 343,\n                columnNumber: 7\n            }, this),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-lg\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white text-lg\",\n                    children: \"Loading face detection models...\"\n                }, void 0, false, {\n                    fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                    lineNumber: 358,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n                lineNumber: 357,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/macbook/Desktop/APP/app/components/FaceVerification.tsx\",\n        lineNumber: 325,\n        columnNumber: 5\n    }, this);\n}\n_s(FaceVerification, \"ytp30Lxb8Lqrn5dmMvAkrx6HcRY=\");\n_c = FaceVerification;\nvar _c;\n$RefreshReg$(_c, \"FaceVerification\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/FaceVerification.tsx\n"));

/***/ })

});